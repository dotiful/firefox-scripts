<?xml version="1.0"?>
<?xml-stylesheet href="data:text/css,@namespace%20url('http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul');@namespace%20html%20url('http://www.w3.org/1999/xhtml');
        %23main-window:not([tabsintitlebar]) %23ucjs_back-button:-moz-system-metric(windows-classic):not(:-moz-lwtheme),
        %23ucjs_back-button {
          list-style-image: url('chrome://browser/skin/Toolbar.png');
          -moz-image-region: rect(0px, 54px, 18px, 36px);
        }
        
        %23toolbar-menubar > %23ucjs_back-button:not(:-moz-system-metric(windows-classic)):not(:-moz-lwtheme),
        %23main-window[tabsintitlebar] %23toolbar-menubar > %23ucjs_back-button:-moz-system-metric(windows-classic):not(:-moz-lwtheme),
        %23ucjs_back-button:not(:-moz-any(:not([cui-areatype='toolbar']), [overflowedItem=true])):-moz-lwtheme-brighttext {
          list-style-image: url('chrome://browser/skin/Toolbar-inverted.png');
          -moz-image-region: rect(0px, 54px, 18px, 36px);
        }
        
        %23main-window:not([tabsintitlebar]) %23ucjs_forward-button:-moz-system-metric(windows-classic):not(:-moz-lwtheme),
        %23ucjs_forward-button {
          list-style-image: url('chrome://browser/skin/Toolbar.png');
          -moz-image-region: rect(0px, 72px, 18px, 54px);
        }
        
        %23toolbar-menubar > %23ucjs_forward-button:not(:-moz-system-metric(windows-classic)):not(:-moz-lwtheme),
        %23main-window[tabsintitlebar] %23toolbar-menubar > %23ucjs_forward-button:-moz-system-metric(windows-classic):not(:-moz-lwtheme),
        %23ucjs_forward-button:not(:-moz-any(:not([cui-areatype='toolbar']), [overflowedItem=true])):-moz-lwtheme-brighttext {
          list-style-image: url('chrome://browser/skin/Toolbar-inverted.png');
          -moz-image-region: rect(0px, 72px, 18px, 54px);
        }
        
        %23ucjs_back-button > .toolbarbutton-menu-dropmarker,
        %23ucjs_forward-button > .toolbarbutton-menu-dropmarker {
          display: none;
        }
        
        %23ucjs_back-button {
          padding-right: 0 !important;
        }
        
        %23ucjs_forward-button {
          padding-left:  0 !important;
        }
        
        %23ucjs_back-button .toolbarbutton-icon,
        %23ucjs_back-button .toolbarbutton-text,
        %23ucjs_forward-button .toolbarbutton-icon,
        %23ucjs_forward-button .toolbarbutton-text {
          -moz-padding-end: 5px !important;
        }
        
        %23ucjs_back-button .toolbarbutton-icon,
        %23ucjs_forward-button  .toolbarbutton-icon {
          padding-left:  3px;
          padding-right: 3px;
        }
        
        
        window:not([chromehidden~='toolbar']) %23urlbar-wrapper > %23urlbar {
          margin: 0 3px !important;
          padding: 0 !important;
          -moz-border-start: 1px solid ThreeDShadow !important;
        }
        window:not([chromehidden~='toolbar']) %23urlbar-wrapper > %23urlbar:-moz-lwtheme {
          -moz-border-start: 1px solid rgba(0,0,0,.32) !important;
        }
        
        window:not([chromehidden~='toolbar']) %23urlbar-wrapper > %23urlbar:not(:-moz-system-metric(windows-classic)):not(:-moz-lwtheme) {
          border-color: hsla(210,54%,20%,.25) hsla(210,54%,20%,.27) hsla(210,54%,20%,.3) !important;
        }
        window:not([chromehidden~='toolbar']) %23urlbar-wrapper > %23urlbar:not(:-moz-system-metric(windows-classic)):not(:-moz-lwtheme)[focused] {
          border-color: Highlight !important;
        }
        
        window:not([chromehidden~='toolbar']) %23urlbar-wrapper > %23urlbar:-moz-locale-dir(ltr) {
          border-top-left-radius: 2px !important;
          border-bottom-left-radius: 2px !important;
        }
        
        window:not([chromehidden~='toolbar']) %23urlbar-wrapper > %23urlbar:-moz-locale-dir(rtl) {
          border-top-right-radius: 2px !important;
          border-bottom-right-radius: 2px !important;
        }
        
        window:not([chromehidden~='toolbar']) %23urlbar-wrapper {
          clip-path: none !important;
          -moz-margin-start: 0x !important;
        }
        
        %23urlbar-container %23back-button,
        %23urlbar-container %23forward-button {
          display: none;
        }

        /**/
        /*Fx29,30*/
        window:not([chromehidden~='toolbar']) %23urlbar-container[forwarddisabled] > %23urlbar-wrapper > %23urlbar > %23notification-popup-box[hidden] + %23identity-box:-moz-locale-dir(ltr) {
          padding-left: 2px !important;
        }
        window:not([chromehidden~='toolbar']) %23urlbar-container[forwarddisabled] > %23urlbar-wrapper > %23urlbar > %23notification-popup-box[hidden] + %23identity-box:-moz-locale-dir(rtl) {
          padding-right: 2px !important;
        }
        window:not([chromehidden~='toolbar']) %23urlbar-container[forwarddisabled] > %23urlbar-wrapper > %23urlbar > %23notification-popup-box[hidden] + %23identity-box:-moz-locale-dir(ltr) {
          /* when not hovered anymore, trigger a new non-delayed transition to react to the forward button hiding */
          padding-left: 2px !important;
        }
       /*Fx31,32*/
        window:not([chromehidden~='toolbar']) %23urlbar-wrapper > %23forward-button[disabled] + %23urlbar > %23notification-popup-box[hidden] + %23identity-box:-moz-locale-dir(ltr) {
          padding-left: 2px;
        }
        window:not([chromehidden~='toolbar']) %23urlbar-wrapper > %23forward-button[disabled] + %23urlbar > %23notification-popup-box[hidden] + %23identity-box:-moz-locale-dir(rtl) {
          padding-right: 2px;
        }
        window:not([chromehidden~='toolbar']) %23urlbar-wrapper:not(:hover) > %23forward-button[disabled] + %23urlbar > %23notification-popup-box[hidden] + %23identity-box:-moz-locale-dir(ltr) {
          /* when not hovered anymore, trigger a new non-delayed transition to react to the forward button hiding */
          padding-left: 2px;
        }

        /*Fx29,30*/
        window:not([chromehidden~='toolbar']) %23urlbar-container[forwarddisabled] > %23urlbar-wrapper > %23urlbar > %23notification-popup-box {
          padding-left: 3px !important;
        }
        /*Fx31,32*/
        window:not([chromehidden~='toolbar']) %23urlbar-wrapper > %23forward-button[disabled] + %23urlbar > %23notification-popup-box {
          padding-left: 3px;
        }
" type="text/css"?>
<overlay id="revertBackForwardButton"
     xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
<!--
// ==UserScript==
// @name           revertBackForwardButton.uc.xul
// @namespace      http://blogs.yahoo.co.jp/alice0775 
// @description    Revert Back Forward Button
// @include        main
// @compatibility  Firefox 29+
// @author         Alice0775
// @version        2014/05/25 06:30 fix style Firefox29, 30
// @version        2014/05/25 05:30 fix shift urlbar when disabled button
// @version        2014/05/25 01:30 fix left border color of URLBar
// @version        2014/05/15 01:30 add class chromeclass-toolbar-additional
// @version        2014/05/15 01:30 fix color
// @version        2014/05/13 10:30 fix second window
// @version        2014/05/13 09:50 remove config
// @version        2014/05/13 09:30 fix second window
// @version        2014/05/13 07:35 fix darktheme
// @version        2014/05/12 08:30 Working on Firefox29+
// @note           not support combined Stop Reload Button / large icons
// ==/UserScript==
 -->
 <script type="application/x-javascript" xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
var revertBackForwardButton = {

  init: function() {
    Components.utils.import("resource:///modules/CustomizableUI.jsm");
    try {
      CustomizableUI.createWidget({ //must run createWidget before windowListener.register because the register function needs the button added first
        id: 'ucjs_back-button',
        type: 'custom',
        defaultArea: CustomizableUI.AREA_NAVBAR,
        onBuild: function(aDocument) {
          var toolbaritem = aDocument.createElementNS('http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul', 'toolbarbutton');
          var props = {
            id: "ucjs_back-button",
            class: "toolbarbutton-1 chromeclass-toolbar-additional",
            label: "Back",
            command: "Browser:BackOrBackDuplicate",
            onclick: "checkForMiddleClick(this, event);",
            oncommand: "BrowserBack(event);",
            tooltiptext: "Eine Seite zurÃ¼ck",
            context: "ucjs_back_forward-button_menupopup"
          };
          for (var p in props) {
            toolbaritem.setAttribute(p, props[p]);
          }
          
          return toolbaritem;
        }
      });
    } catch(ee) {}

    try {
      CustomizableUI.createWidget({ //must run createWidget before windowListener.register because the register function needs the button added first
        id: 'ucjs_forward-button',
        type: 'custom',
        defaultArea: CustomizableUI.AREA_NAVBAR,
        onBuild: function(aDocument) {
          var toolbaritem = aDocument.createElementNS('http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul', 'toolbarbutton');
          var props = {
            id: "ucjs_forward-button",
            class: "toolbarbutton-1 chromeclass-toolbar-additional",
            label: "Forward",
            command: "Browser:ForwardOrForwardDuplicate",
            onclick: "checkForMiddleClick(this, event);",
            oncommand: "BrowserForward(event);",
            tooltiptext: "Eine Seite vor",
            context: "ucjs_back_forward-button_menupopup"
          };
          for (var p in props) {
            toolbaritem.setAttribute(p, props[p]);
          }

          return toolbaritem;
        }
      });
    } catch(ee) {}

    window.addEventListener("aftercustomization", revertBackForwardButton, false);
    revertBackForwardButton.SetClickAndHoldHandlers();

  },

  handleEvent: function(event) {
    switch(event.type) {
      case "aftercustomization":
        this.UpdateBackForwardCommands(gBrowser.webNavigation);
        break;
    }
  },
  
  UpdateBackForwardCommands: function ucjs_UpdateBackForwardCommands(aWebNavigation) {
    if (aWebNavigation.canGoBack) {
        document.getElementById("ucjs_back-button").removeAttribute("disabled");
    } else {
        document.getElementById("ucjs_back-button").setAttribute("disabled", true);
    }

    if (aWebNavigation.canGoForward) {
        document.getElementById("ucjs_forward-button").removeAttribute("disabled");
    } else {
        document.getElementById("ucjs_forward-button").setAttribute("disabled", true);
    }
  },

  /**
   * Click-and-Hold implementation for the Back and Forward buttons
   * XXXmano: should this live in toolbarbutton.xml?
   */
  SetClickAndHoldHandlers: function SetClickAndHoldHandlers() {
    var timer;

    function openMenu(aButton) {
      cancelHold(aButton);
      aButton.firstChild.hidden = false;
      aButton.open = true;
    }

    function mousedownHandler(aEvent) {
      if (aEvent.button != 0 ||
          aEvent.currentTarget.open ||
          aEvent.currentTarget.disabled)
        return;

      // Prevent the menupopup from opening immediately
      aEvent.currentTarget.firstChild.hidden = true;

      aEvent.currentTarget.addEventListener("mouseout", mouseoutHandler, false);
      aEvent.currentTarget.addEventListener("mouseup", mouseupHandler, false);
      timer = setTimeout(openMenu, 500, aEvent.currentTarget);
    }

    function mouseoutHandler(aEvent) {
      let buttonRect = aEvent.currentTarget.getBoundingClientRect();
      if (aEvent.clientX >= buttonRect.left &&
          aEvent.clientX <= buttonRect.right &&
          aEvent.clientY >= buttonRect.bottom)
        openMenu(aEvent.currentTarget);
      else
        cancelHold(aEvent.currentTarget);
    }

    function mouseupHandler(aEvent) {
      cancelHold(aEvent.currentTarget);
    }

    function cancelHold(aButton) {
      clearTimeout(timer);
      aButton.removeEventListener("mouseout", mouseoutHandler, false);
      aButton.removeEventListener("mouseup", mouseupHandler, false);
    }

    function clickHandler(aEvent) {
      if (aEvent.button == 0 &&
          aEvent.target == aEvent.currentTarget &&
          !aEvent.currentTarget.open &&
          !aEvent.currentTarget.disabled) {
        let cmdEvent = document.createEvent("xulcommandevent");
        cmdEvent.initCommandEvent("command", true, true, window, 0,
                                  aEvent.ctrlKey, aEvent.altKey, aEvent.shiftKey,
                                  aEvent.metaKey, null);
        aEvent.currentTarget.dispatchEvent(cmdEvent);
      }
    }

    function _addClickAndHoldListenersOnElement(aElm) {
      aElm.addEventListener("mousedown", mousedownHandler, true);
      aElm.addEventListener("click", clickHandler, true);
    }

    // Bug 414797: Clone the back/forward buttons' context menu into both buttons.
    let popup = document.getElementById("backForwardMenu").cloneNode(true);
    popup.removeAttribute("id");
    // Prevent the back/forward buttons' context attributes from being inherited.
    popup.setAttribute("context", "");

    let backButton = document.getElementById("ucjs_back-button");
    backButton.setAttribute("type", "menu");
    backButton.appendChild(popup);
    _addClickAndHoldListenersOnElement(backButton);

    let forwardButton = document.getElementById("ucjs_forward-button");
    popup = popup.cloneNode(true);
    forwardButton.setAttribute("type", "menu");
    forwardButton.appendChild(popup);
    _addClickAndHoldListenersOnElement(forwardButton);
  }

};

revertBackForwardButton.init();
  ]]></script>
  <popupset id="mainPopupSet">
    <menupopup id="ucjs_back_forward-button_menupopup"
               onpopupshowing="return FillHistoryMenu(event.target);"
               oncommand="gotoHistoryIndex(event); event.stopPropagation();"
               onclick="checkForMiddleClick(this, event);"
               position="after_start"
               context="" />
  </popupset>
</overlay>
